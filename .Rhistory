usethis::use_package("ggplot2")
usethis::use_package("dplyr")
# Add dependencies
pkg = c("cluster","dplyr"
"Rtsne","ggplot2","umap",
# Add dependencies
pkg = c("cluster","dplyr",
"Rtsne","ggplot2","umap",
"anocva","readxl","tidyverse",
"ggpubr","naniar", "lubridate",
"survival","ISLR","caret","qqman",
"scatterplot3d","magrittr",
"knitr","ggridges","viridis",
"ggpubr","GGally","reshape2",
"plotly","heatmaply","ggcorrplot",
"umap","anocva","readxl",
"lavaan","mediation","factoextra")
# Add dependencies
pkg_list = c("cluster","dplyr",
"Rtsne","ggplot2","umap",
"anocva","readxl","tidyverse",
"ggpubr","naniar", "lubridate",
"survival","ISLR","caret","qqman",
"scatterplot3d","magrittr",
"knitr","ggridges","viridis",
"ggpubr","GGally","reshape2",
"plotly","heatmaply","ggcorrplot",
"umap","anocva","readxl",
"lavaan","mediation","factoextra")
for (pkg in pkg_list){
usethis::use_package(pkg)
}
# Add dependencies
pkg_list = c("cluster","dplyr",
"Rtsne","ggplot2","umap",
"anocva","readxl","dplyr",
"ggpubr","naniar", "lubridate",
"survival","ISLR","caret","qqman",
"scatterplot3d","magrittr",
"knitr","ggridges","viridis",
"ggpubr","GGally","reshape2",
"plotly","heatmaply","ggcorrplot",
"umap","anocva","readxl",
"lavaan","mediation","factoextra")
for (pkg in pkg_list){
usethis::use_package(pkg)
}
usethis::use_vignette("autoclust")
usethis::use_roxygen_md()
library(roxygen2)
roxygen2::roxygenise()
?compute_dissimilarity_matrix
# list dependencies
pkg_list = c("cluster","dplyr",
"Rtsne","ggplot2","umap",
"anocva","readxl","dplyr",
"ggpubr","naniar", "lubridate",
"survival","ISLR","caret","qqman",
"scatterplot3d","magrittr",
"knitr","ggridges","viridis",
"ggpubr","GGally","reshape2",
"plotly","heatmaply","ggcorrplot",
"umap","anocva","readxl",
"lavaan","mediation","factoextra",
"pheatmap")
# Add them to DESCRIPTION
for (pkg in pkg_list){
usethis::use_package(pkg)
}
# list dependencies
pkg_list = c("cluster","dplyr",
"Rtsne","ggplot2","umap",
"anocva","readxl","dplyr",
"ggpubr","naniar", "lubridate",
"survival","ISLR","caret","qqman",
"scatterplot3d","magrittr",
"knitr","ggridges","viridis",
"ggpubr","GGally","reshape2",
"plotly","heatmaply","ggcorrplot",
"umap","anocva","readxl",
"lavaan","mediation","factoextra",
"pheatmap", "factoextra")
# Add them to DESCRIPTION
for (pkg in pkg_list){
usethis::use_package(pkg)
}
#' @param ndim Maximum number of clusters to consider for the silhouette plot.
#' @return A list containing the dissimilarity matrix, optionally the heatmap plot, and the silhouette plot if specified.
#' @examples
#' # Example of how to use the function
#' result <- compute_dissimilarity_matrix(x = autoant_dataset, metric = "gower")
#' result$dissimilarity_matrix  # Access the matrix
#' result$heatmap_plot  # Access the plot (if plot_dissim = TRUE)
#' result$silhouette_plot  # Access the silhouette plot (if sillplot = TRUE)
#'
#' @export
compute_dissimilarity_matrix <- function(x, metric = c("euclidean", "manhattan", "gower"), stand = FALSE,
plot_dissim = TRUE, plot_title = paste0(metric, " Dissimilarity Matrix"),
plot_title_size = 20, sillplot = TRUE, ndim = 10) {
# Calculate the dissimilarity matrix
x_disim <- daisy(x, metric = metric, stand = stand)
x_dissim_matrix <- as.matrix(x_disim)
# Initialize a list to store results
result <- list(dissimilarity_matrix = x_dissim_matrix)
# Optionally create a heatmap plot
if (plot_dissim) {
pheatmap_dissim <- factoextra::fviz_dist(x_disim) +
theme(axis.text = element_text(size = 9), plot.title = element_text(size = plot_title_size)) +
ggtitle(plot_title)
# Add the plot to the list
result$heatmap_plot <- pheatmap_dissim
}
# Plot silhouette if specified by user
if (sillplot) {
# Calculate silhouette widths for cluster sizes 2 to ndim
sil_width <- numeric(ndim)
for (i in 2:ndim) {
pam_fit <- pam(x_disim, diss = TRUE, k = i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
# Create silhouette plot with ggplot2
sil_data <- data.frame(Clusters = as.integer(1:ndim), Avg_Silhouette_Width = sil_width)
sillplot <- ggplot(sil_data, aes(x = Clusters, y = Avg_Silhouette_Width)) +
geom_line() +
geom_point() +
labs(x = "Number of clusters", y = "Average Silhouette Width") +
theme_minimal()
# Add silhouette plot to the list
result$silhouette_plot <- sillplot
}
# Return the list containing the matrix and, if requested, the plots
return(result)
}
help(ggsave)
theme_line()
theme_bw()
library(ggplot2)
roxygen2::roxygenise()
pkgload::dev_help('compute_dissimilarity_matrix')
sil_data <- sil_data %>% slice_head(n = 1)
roxygen2::roxygenise()
pkgload::dev_help('plot_most_similar_dissimilar')
library(RColorBrewer)
library(randomcoloR)
distinctColorPalette(2)
usethis::use_package("randomcoloR")
usethis::use_package("Rtsne")
roxygen2::roxygenise()
pkgload::dev_help('compute_dissimilarity_matrix')
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
usethis::use_package(cluster)
usethis::use_package("cluster")
